## Closes a Process

# Global Imports
import ctypes

u_handle = ctypes.WinDLL("User32.dll")
k_handle = ctypes.WinDLL("Kernel32.dll")

# Shortcut to give "All Access" rights to the current process. 
# The |'s are being used as "or" statements, as a shortcut instead of typing out every variable needed, and their values.
PROCESS_ALL_ACCESS = ( 0x000f0000 | 0x00100000 | 0xFFF)

lpWindowName = ctypes.c_char_p(input("Enter the name of the Process to close: ").encode('utf-8'))
hWnd = u_handle.FindWindowA(None, lpWindowName)

if hWnd == 0:
    print("Error Code: {0} - Could not grab Process Handle".format(k_handle.GetLastError()))
    exit(1)
else:
    print("Successfuly got Handle. Now closing Program.")

lpdwProcessId = ctypes.c_ulong()

response = u_handle.GetWindowThreadProcessId(hWnd, ctypes.byref(lpdwProcessId))

if response == 0:
    print("Error Code: {0} - Could not grab PID".format(k_handle.GetlastError))
    exit(1)
else:
    print("Successfuly got PID!")

dwDesiredAccess = PROCESS_ALL_ACCESS
bInheritHandle = False
dwProcessId = lpdwProcessId

hProcess = k_handle.OpenProcess(dwDesiredAccess, bInheritHandle, dwProcessId)

if hProcess <= 0:
    print("Error Code {0} - Could not grab Priv Handle".format(k_handle.GetLastError()))
else:
    print("Successfully grabbed higher privileges!")

uExitCode = 0x1

response = k_handle.TerminateProcess(hProcess, uExitCode)

if response == 0:
    print("Error Code: {0} - Could not close Process".format(k_handle.GetLastError()))
else:
    print("Successfully closed Process.")
    
